{"ast":null,"code":"import _classCallCheck from \"/Users/darwinrinderer/Desktop/My Docs/World Bank/Bank Repos/eapstory/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/darwinrinderer/Desktop/My Docs/World Bank/Bank Repos/eapstory/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/darwinrinderer/Desktop/My Docs/World Bank/Bank Repos/eapstory/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/darwinrinderer/Desktop/My Docs/World Bank/Bank Repos/eapstory/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/darwinrinderer/Desktop/My Docs/World Bank/Bank Repos/eapstory/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/darwinrinderer/Desktop/My Docs/World Bank/Bank Repos/eapstory/src/components/Graphs/Choropleth/Choropleth.jsx\";\n// External Imports\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport * as topojson from 'topojson'; // Internal Imports\n\nimport './Choropleth.css'; // Data\n\nimport eapCountryData from '../../../data/ChoroplethData/EAPMap_topojson.json';\nimport geoJsonData from '../../../data/ChoroplethData/EAPMap_geojson.json';\n\nvar Choropleth =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Choropleth, _Component);\n\n  function Choropleth() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Choropleth);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Choropleth)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      eapCountryData: null,\n      windowHeight: null,\n      windowWidth: null\n    };\n\n    _this.renderMap = function () {\n      var _this$state = _this.state,\n          eapCountryData = _this$state.eapCountryData,\n          windowHeight = _this$state.windowHeight,\n          windowWidth = _this$state.windowWidth;\n      var featureCollection = topojson.feature(eapCountryData, eapCountryData.objects.eap_all_by_subnatid1_shapefile);\n      var svg = d3.select('.Choropleth-container').append('svg').attr('height', windowHeight).attr('width', windowWidth); // THIS WORKS DON'T DELETE\n      // const projection = d3.geoIdentity()\n      // .fitExtent([[-2000, 300], [900, 900]], featureCollection)\n      // .reflectY(true);\n\n      var projection = d3.geoIdentity() // .scale(1.1)\n      // .translate([windowWidth / 2, windowHeight / 2])\n      .reflectY(true).fitExtent([[0, 0], [windowWidth, windowHeight]], featureCollection);\n      var path = d3.geoPath().projection(projection);\n      svg.append('g').attr('class', 'country').selectAll('path').data(featureCollection.features).enter().append('path').attr('d', path);\n    };\n\n    return _this;\n  }\n\n  _createClass(Choropleth, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log(eapCountryData);\n      this.setState({\n        eapCountryData: eapCountryData,\n        windowHeight: window.outerHeight,\n        windowWidth: window.outerWidth\n      }, function () {\n        _this2.renderMap();\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"Choropleth-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Choropleth;\n}(Component);\n\nexport default Choropleth;","map":{"version":3,"sources":["/Users/darwinrinderer/Desktop/My Docs/World Bank/Bank Repos/eapstory/src/components/Graphs/Choropleth/Choropleth.jsx"],"names":["React","Component","d3","topojson","eapCountryData","geoJsonData","Choropleth","state","windowHeight","windowWidth","renderMap","featureCollection","feature","objects","eap_all_by_subnatid1_shapefile","svg","select","append","attr","projection","geoIdentity","reflectY","fitExtent","path","geoPath","selectAll","data","features","enter","console","log","setState","window","outerHeight","outerWidth"],"mappings":";;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B,C,CAEA;;AACA,OAAO,kBAAP,C,CAEA;;AACA,OAAOC,cAAP,MAA2B,mDAA3B;AACA,OAAOC,WAAP,MAAwB,kDAAxB;;IAEMC,U;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNH,MAAAA,cAAc,EAAE,IADV;AAENI,MAAAA,YAAY,EAAE,IAFR;AAGNC,MAAAA,WAAW,EAAE;AAHP,K;;UAoBRC,S,GAAY,YAAM;AAAA,wBACsC,MAAKH,KAD3C;AAAA,UACRH,cADQ,eACRA,cADQ;AAAA,UACQI,YADR,eACQA,YADR;AAAA,UACsBC,WADtB,eACsBA,WADtB;AAEhB,UAAME,iBAAiB,GAAGR,QAAQ,CAACS,OAAT,CACxBR,cADwB,EAExBA,cAAc,CAACS,OAAf,CAAuBC,8BAFC,CAA1B;AAKA,UAAMC,GAAG,GAAGb,EAAE,CACXc,MADS,CACF,uBADE,EAETC,MAFS,CAEF,KAFE,EAGTC,IAHS,CAGJ,QAHI,EAGMV,YAHN,EAITU,IAJS,CAIJ,OAJI,EAIKT,WAJL,CAAZ,CAPgB,CAchB;AACA;AACA;AACA;;AAEA,UAAMU,UAAU,GAAGjB,EAAE,CAACkB,WAAH,GACjB;AACD;AAFkB,OAGhBC,QAHgB,CAGP,IAHO,EAIjBC,SAJiB,CAIP,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS,CAACb,WAAD,EAAcD,YAAd,CAAT,CAJO,EAIgCG,iBAJhC,CAAnB;AAMA,UAAMY,IAAI,GAAGrB,EAAE,CAACsB,OAAH,GAAaL,UAAb,CAAwBA,UAAxB,CAAb;AAEAJ,MAAAA,GAAG,CAACE,MAAJ,CAAW,GAAX,EACGC,IADH,CACQ,OADR,EACiB,SADjB,EAEGO,SAFH,CAEa,MAFb,EAGGC,IAHH,CAGQf,iBAAiB,CAACgB,QAH1B,EAIGC,KAJH,GAIWX,MAJX,CAIkB,MAJlB,EAKGC,IALH,CAKQ,GALR,EAKaK,IALb;AAMD,K;;;;;;;wCA/CmB;AAAA;;AAClBM,MAAAA,OAAO,CAACC,GAAR,CAAY1B,cAAZ;AACA,WAAK2B,QAAL,CACE;AACE3B,QAAAA,cAAc,EAAEA,cADlB;AAEEI,QAAAA,YAAY,EAAEwB,MAAM,CAACC,WAFvB;AAGExB,QAAAA,WAAW,EAAEuB,MAAM,CAACE;AAHtB,OADF,EAME,YAAM;AACJ,QAAA,MAAI,CAACxB,SAAL;AACD,OARH;AAUD;;;6BAqCQ;AACP,aAAO;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;;EA1DsBT,S;;AA6DzB,eAAeK,UAAf","sourcesContent":["// External Imports\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport * as topojson from 'topojson';\n\n// Internal Imports\nimport './Choropleth.css';\n\n// Data\nimport eapCountryData from '../../../data/ChoroplethData/EAPMap_topojson.json';\nimport geoJsonData from '../../../data/ChoroplethData/EAPMap_geojson.json';\n\nclass Choropleth extends Component {\n  state = {\n    eapCountryData: null,\n    windowHeight: null,\n    windowWidth: null,\n  };\n\n  componentDidMount() {\n    console.log(eapCountryData);\n    this.setState(\n      {\n        eapCountryData: eapCountryData,\n        windowHeight: window.outerHeight,\n        windowWidth: window.outerWidth,\n      },\n      () => {\n        this.renderMap();\n      }\n    );\n  }\n\n  renderMap = () => {\n    const { eapCountryData, windowHeight, windowWidth } = this.state;\n    const featureCollection = topojson.feature(\n      eapCountryData,\n      eapCountryData.objects.eap_all_by_subnatid1_shapefile\n    );\n\n    const svg = d3\n      .select('.Choropleth-container')\n      .append('svg')\n      .attr('height', windowHeight)\n      .attr('width', windowWidth);\n\n\n    // THIS WORKS DON'T DELETE\n    // const projection = d3.geoIdentity()\n    // .fitExtent([[-2000, 300], [900, 900]], featureCollection)\n    // .reflectY(true);\n    \n    const projection = d3.geoIdentity()\n      // .scale(1.1)\n     // .translate([windowWidth / 2, windowHeight / 2])\n      .reflectY(true)\n     .fitExtent([[0, 0], [windowWidth, windowHeight]], featureCollection)\n\n    const path = d3.geoPath().projection(projection);\n\n    svg.append('g')\n      .attr('class', 'country')\n      .selectAll('path')\n      .data(featureCollection.features)\n      .enter().append('path')\n      .attr('d', path);\n  };\n\n  render() {\n    return <div className=\"Choropleth-container\" />;\n  }\n}\n\nexport default Choropleth;\n"]},"metadata":{},"sourceType":"module"}