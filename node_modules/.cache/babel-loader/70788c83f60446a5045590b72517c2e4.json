{"ast":null,"code":"import _classCallCheck from \"/Users/darwinrinderer/Desktop/My Docs/World Bank/Bank Repos/eapstory/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/darwinrinderer/Desktop/My Docs/World Bank/Bank Repos/eapstory/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/darwinrinderer/Desktop/My Docs/World Bank/Bank Repos/eapstory/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/darwinrinderer/Desktop/My Docs/World Bank/Bank Repos/eapstory/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/darwinrinderer/Desktop/My Docs/World Bank/Bank Repos/eapstory/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/darwinrinderer/Desktop/My Docs/World Bank/Bank Repos/eapstory/src/components/Graphs/Choropleth/Choropleth.jsx\";\n// External Imports\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport * as topojson from 'topojson';\nimport Waypoint from 'react-waypoint'; // Internal Imports\n\nimport getRandomInt from '../../../utilities/getRandomInt';\nimport './Choropleth.css'; // Data\n\nimport eapCountryData from '../../../data/ChoroplethData/EAPMap_topojson.json';\n\nvar Choropleth =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Choropleth, _Component);\n\n  function Choropleth() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Choropleth);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Choropleth)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      color: null,\n      eapCountryData: null,\n      index: [0, 1, 2, 3, 4, 5, 6, 7],\n      windowHeight: null,\n      windowWidth: null\n    };\n\n    _this.renderMap = function () {\n      var _this$state = _this.state,\n          color = _this$state.color,\n          eapCountryData = _this$state.eapCountryData,\n          windowHeight = _this$state.windowHeight,\n          windowWidth = _this$state.windowWidth;\n      var featureCollection = topojson.feature(eapCountryData, eapCountryData.objects.eap_all_by_subnatid1_shapefile);\n      var svg = d3.select('.Choropleth-container').append('svg').attr('height', windowHeight).attr('width', windowWidth);\n      var center = d3.geoPath().centroid(featureCollection);\n      var scale = 500;\n      var offset = [windowWidth / 2, windowHeight / 2];\n      var projection = d3.geoMercator().scale(scale).center(center).translate(offset);\n      var path = d3.geoPath().projection(projection);\n      svg.append('g').attr('class', 'country').selectAll('path').data(featureCollection.features).enter().append('path').attr('class', 'sub-nation').attr('fill', function (d) {\n        return color(getRandomInt(11));\n      }).attr('d', path);\n    };\n\n    _this.updateMap = function () {\n      var color = _this.state.color;\n      d3.selectAll('path.sub-nation').attr(\"fill\", function (d) {\n        return color(getRandomInt(11));\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Choropleth, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var color = d3.scaleQuantize().domain([0, 10]).range(d3.schemeBlues[9]);\n      this.setState({\n        color: color,\n        eapCountryData: eapCountryData,\n        windowHeight: window.outerHeight,\n        windowWidth: window.outerWidth\n      }, function () {\n        _this2.renderMap();\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var index = this.state.index;\n      return React.createElement(\"div\", {\n        className: \"Choropleth-sequence-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Choropleth-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), index.map(function (i) {\n        return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n          className: \"choropleth-\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }), React.createElement(Waypoint, {\n          onEnter: function onEnter() {\n            return _this3.updateMap();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }));\n      }));\n    }\n  }]);\n\n  return Choropleth;\n}(Component);\n\nexport default Choropleth;","map":{"version":3,"sources":["/Users/darwinrinderer/Desktop/My Docs/World Bank/Bank Repos/eapstory/src/components/Graphs/Choropleth/Choropleth.jsx"],"names":["React","Component","d3","topojson","Waypoint","getRandomInt","eapCountryData","Choropleth","state","color","index","windowHeight","windowWidth","renderMap","featureCollection","feature","objects","eap_all_by_subnatid1_shapefile","svg","select","append","attr","center","geoPath","centroid","scale","offset","projection","geoMercator","translate","path","selectAll","data","features","enter","d","updateMap","scaleQuantize","domain","range","schemeBlues","setState","window","outerHeight","outerWidth","map","i"],"mappings":"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","sourcesContent":["// External Imports\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport * as topojson from 'topojson';\nimport Waypoint from 'react-waypoint';\n\n// Internal Imports\nimport getRandomInt from '../../../utilities/getRandomInt';\nimport './Choropleth.css';\n\n// Data\nimport eapCountryData from '../../../data/ChoroplethData/EAPMap_topojson.json';\n\nclass Choropleth extends Component {\n  state = {\n    color: null,\n    eapCountryData: null,\n    index: [0, 1, 2, 3, 4, 5, 6, 7],\n    windowHeight: null,\n    windowWidth: null,\n  };\n\n  componentDidMount() {\n    const color = d3.scaleQuantize().domain([0, 10]).range(d3.schemeBlues[9]);\n    this.setState(\n      {\n        color: color,\n        eapCountryData: eapCountryData,\n        windowHeight: window.outerHeight,\n        windowWidth: window.outerWidth,\n      },\n      () => {\n        this.renderMap();\n      }\n    );\n  }\n\n  renderMap = () => {\n    const { color, eapCountryData, windowHeight, windowWidth } = this.state;\n    const featureCollection = topojson.feature(\n      eapCountryData,\n      eapCountryData.objects.eap_all_by_subnatid1_shapefile\n    );\n\n    const svg = d3\n      .select('.Choropleth-container')\n      .append('svg')\n      .attr('height', windowHeight)\n      .attr('width', windowWidth);\n\n    const center = d3.geoPath().centroid(featureCollection);\n    const scale = 500;\n    const offset = [windowWidth / 2, windowHeight / 2];\n\n    const projection = d3\n      .geoMercator()\n      .scale(scale)\n      .center(center)\n      .translate(offset);\n\n    const path = d3.geoPath().projection(projection);\n\n    svg\n      .append('g')\n      .attr('class', 'country')\n      .selectAll('path')\n      .data(featureCollection.features)\n      .enter()\n      .append('path')\n      .attr('class', 'sub-nation')\n      .attr('fill', (d) => color(getRandomInt(11)))\n      .attr('d', path);\n  };\n\n  updateMap = () => {\n    const { color } = this.state;\n    d3.selectAll('path.sub-nation')\n      .attr(\"fill\", d => color(getRandomInt(11)))\n  }\n\n  render() {\n    const { index } = this.state;\n    return (\n      <div className=\"Choropleth-sequence-container\">\n        <div className=\"Choropleth-container\" />\n        {index.map((i) => {\n          return (\n            <>\n              <div className=\"choropleth-\" />\n              <Waypoint onEnter={() => this.updateMap()} />\n            </>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default Choropleth;\n"]},"metadata":{},"sourceType":"module"}