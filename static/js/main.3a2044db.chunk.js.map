{"version":3,"sources":["data/BarGraphData/EAP_higher_pov.csv","data/BubbleGraphData/asean_1.9.csv","data/BubbleGraphData/asean_3.2.csv","data/BubbleGraphData/asean_5.5.csv","data/StackedAreaGraphData/asean_economic_class.csv","data/StackedAreaGraphData/indonesia_economic_class.csv","data/StackedAreaGraphData/lao_economic_class.csv","data/StackedAreaGraphData/malaysia_economic_class.csv","data/StackedAreaGraphData/myanmar_economic_class.csv","data/StackedAreaGraphData/philippines_economic_class.csv","data/StackedAreaGraphData/thailand_economic_class.csv","data/StackedAreaGraphData/vietnam_economic_class.csv","data/StackedAreaGraphData/eap_economic_class.csv","data/StackedAreaGraphData/eap_ex_china_economic_class.csv","data/StackedAreaGraphData/eap_economic_class_percentage.csv","data/StackedAreaGraphData/eap_ex_china_economic_class_percentage.csv","utilities/formatHigherPovertyData.js","components/Graphs/BarGraph/BarGraph.jsx","utilities/formatHigherPovertyDataTwo.js","components/Graphs/BarGraphV2/BarGraphV2.jsx","utilities/formatPovertyData.js","utilities/displayDataPopulator.js","components/Graphs/BubbleGraph/BubbleGraph.jsx","utilities/getRandomInt.js","utilities/scaleByScreenSize.js","components/Graphs/Choropleth/Choropleth.jsx","components/Header/Header.jsx","utilities/formatClassData.js","components/Graphs/StackedAreaGraphV2/StackedAreaGraphV2.jsx","components/Graphs/StackedAreaGraph/StackedAreaGraph.jsx","components/Graphs/StackedAreaGraphContainer/StackedAreaGraphContainer.jsx","utilities/extractText.js","components/StoryboardContainer/StoryboardContainer.jsx","App.jsx","AppContainer.jsx","index.jsx"],"names":["module","exports","__webpack_require__","p","formatHigherPovertyData","array","year","category","map","d","i","obj","x","y","parseFloat","BarGraph","state","higherPovertyDisplayData","reserveData","years","updateGraph","updatedHigherPovertyData","_this","data","setState","_this2","this","Promise","all","d3","higherPovertyData","then","files","formattedHigherPovertyData","file","elements","document","querySelectorAll","Stickyfill","add","_this3","_this$state","react_default","a","createElement","className","victory_chart","height","width","domainPadding","animate","duration","victory_bar","style","fill","xName","categories","Fragment","es","onEnter","Component","formatHigherPovertyDataTwo","formatPovertyData","color","arrObj","Object","keys","Date","values","value","slice","size","arr","displayDataPopulator","index","subArr","BubbleGraph","displayData","colors","asean1_9","asean3_2","asean5_5","displayArr","res","length","push","formattedPovertyData","tractColor","flowText","props","scale","domain","victory_scatter","bubbleProperty","onExit","before","opacity","_y","after","datum","getRandomInt","max","Math","floor","random","scaleByScreenSize","windowWidth","window","innerWidth","Choropleth","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","renderMap","containerHeight","containerWidth","featureCollection","mapCenter","svg","append","attr","offset","projection","center","translate","path","selectAll","features","enter","onResize","choroplethContainerRef","current","clientHeight","clientWidth","newScale","newOffset","newProjection","newPath","updateMap","eapCountryData","windowHeight","React","createRef","choroplethRef","range","choroplethContainerHeight","choroplethContainerWidth","topojson","objects","eap_all_by_subnatid1_shapefile","centroid","addEventListener","removeEventListener","ref","Header","formatClassData","StackedAreaGraphV2","isPercent","victory_stack","colorScale","victory_area","key","interpolation","victory_axis","dependentAxis","tickFormat","tick","concat","crossAxis","StackedAreaGraphContainer","displayText","formattedClassData","percentageData","stackedAreaText","setInterval","eapClassData","eapExChinaClassData","eapPercentageClassData","eapExChinaPercentageClassData","_this$state2","Graphs_StackedAreaGraphV2_StackedAreaGraphV2","extractText","StoryboardContainer","firstText","secondText","thirdText","fourthText","fifthText","sixthText","seventhText","textArray","appText","components_Header_Header","text","Graphs_StackedAreaGraphContainer_StackedAreaGraphContainer","Graphs_BubbleGraph_BubbleGraph","Graphs_BarGraph_BarGraph","Graphs_Choropleth_Choropleth","App","components_StoryboardContainer_StoryboardContainer","AppContainer","src_App","ReactDOM","render","src_AppContainer","getElementById"],"mappings":"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","file":"static/js/main.3a2044db.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/EAP_higher_pov.c04c0e1b.csv\";","module.exports = __webpack_public_path__ + \"static/media/asean_1.9.d2d83d68.csv\";","module.exports = __webpack_public_path__ + \"static/media/asean_3.2.da9a0cd2.csv\";","module.exports = __webpack_public_path__ + \"static/media/asean_5.5.7a59e30c.csv\";","module.exports = __webpack_public_path__ + \"static/media/asean_economic_class.6bdf3b9c.csv\";","module.exports = __webpack_public_path__ + \"static/media/indonesia_economic_class.3959786b.csv\";","module.exports = __webpack_public_path__ + \"static/media/lao_economic_class.8c4c4ffa.csv\";","module.exports = __webpack_public_path__ + \"static/media/malaysia_economic_class.b6650a5b.csv\";","module.exports = __webpack_public_path__ + \"static/media/myanmar_economic_class.db025a2c.csv\";","module.exports = __webpack_public_path__ + \"static/media/philippines_economic_class.8ac626a5.csv\";","module.exports = __webpack_public_path__ + \"static/media/thailand_economic_class.18e907a8.csv\";","module.exports = __webpack_public_path__ + \"static/media/vietnam_economic_class.c9311325.csv\";","module.exports = __webpack_public_path__ + \"static/media/eap_economic_class.c1c4a575.csv\";","module.exports = __webpack_public_path__ + \"static/media/eap_ex_china_economic_class.87e5e61b.csv\";","module.exports = __webpack_public_path__ + \"static/media/eap_economic_class_percentage.807a2eb8.csv\";","module.exports = __webpack_public_path__ + \"static/media/eap_ex_china_economic_class_percentage.40d5b8ba.csv\";","const formatHigherPovertyData = (array, year) => {\n  const category = ['< $1.9', '$1.9-$3.2', '$3.2-$5.5', '$5.5-$15', '> $15'];\n  const arr = array.map((d, i) => {\n    let obj = {};\n    obj.x = category[i];\n    obj.y = parseFloat(d[year]);\n    return obj;\n  });\n\n  return arr;\n};\n\nexport default formatHigherPovertyData;\n","// External Imports\nimport React, { Component } from 'react';\nimport { VictoryChart, VictoryBar } from 'victory';\nimport * as d3 from 'd3';\nimport Waypoint from 'react-waypoint';\nimport Stickyfill from 'stickyfilljs';\n\n// Internal Imports\nimport formatHigherPovertyData from '../../../utilities/formatHigherPovertyData';\nimport './BarGraph.css';\n\n// Data\nimport higherPovertyData from '../../../data/BarGraphData/EAP_higher_pov.csv';\n\nclass BarGraph extends Component {\n  state = {\n    higherPovertyDisplayData: null,\n    reserveData: null,\n    years: [2002, 2006, 2010, 2014, 2018],\n  };\n\n  componentDidMount() {\n    Promise.all([\n      d3.csv(higherPovertyData), //\n    ]).then((files) => {\n      const formattedHigherPovertyData = files.map((file) => {\n        return formatHigherPovertyData(file, 2002);\n      });\n      this.setState({\n        higherPovertyDisplayData: formattedHigherPovertyData[0],\n        reserveData: files,\n      });\n    });\n\n    const elements = document.querySelectorAll('.BarGraph-sticky');\n    Stickyfill.add(elements);\n  }\n\n  updateGraph = (year) => {\n    const { reserveData } = this.state;\n    const updatedHigherPovertyData = reserveData.map((data) => {\n      return formatHigherPovertyData(data, year);\n    });\n    this.setState({\n      higherPovertyDisplayData: updatedHigherPovertyData[0],\n    });\n  };\n\n  render() {\n    const { higherPovertyDisplayData, years } = this.state;\n    return (\n      <div className=\"BarGraph-sequence-container\">\n        <div className=\"BarGraph-container BarGraph-sticky\">\n          <VictoryChart\n            height={400}\n            width={400}\n            // domain={{ y: [0, 1000] }}\n            domainPadding={{ x: 25 }}\n            animate={{ duration: 500 }}\n          >\n            <VictoryBar\n              style={{\n                data: {\n                  fill: (d) => (d.xName === '< $1.9' ? '#c43a31' : '#000000'),\n                },\n              }}\n              categories={{\n                x: ['< $1.9', '$1.9-$3.2', '$3.2-$5.5', '$5.5-$15', '> $15'],\n              }}\n              data={higherPovertyDisplayData}\n            />\n          </VictoryChart>\n        </div>\n        {years.map((year, i) => {\n          return (\n            <>\n              {i === 0 ? <div className=\"BarGraph-waypoint-buffer\" /> : null}\n              <div className=\"BarGraph-waypoint-buffer\" />\n              <Waypoint onEnter={() => this.updateGraph(year)} />\n              <div className=\"BarGraph-waypoint-buffer\" />\n              {i === 4 ? <div className=\"BarGraph-waypoint-buffer\" /> : null}\n            </>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default BarGraph;\n","const formatHigherPovertyDataTwo = (array, year) => {\n  const arr = array.map((d, i) => {\n    let obj = {};\n    obj.x = year;\n    obj.y = parseFloat(d[year]);\n    return [obj];\n  });\n\n  return arr;\n};\n\nexport default formatHigherPovertyDataTwo;\n","// External Imports\nimport React, { Component } from 'react';\nimport { VictoryAxis, VictoryChart, VictoryBar, VictoryStack } from 'victory';\nimport * as d3 from 'd3';\nimport Waypoint from 'react-waypoint';\nimport Stickyfill from 'stickyfilljs';\n\n// Internal Imports\nimport formatHigherPovertyDataTwo from '../../../utilities/formatHigherPovertyDataTwo';\nimport './BarGraphV2.css';\n\n// Data\nimport higherPovertyData from '../../../data/BarGraphData/EAP_higher_pov.csv';\n\nclass BarGraphV2 extends Component {\n  state = {\n    higherPovertyDisplayData: null,\n    reserveData: null,\n    years: [2006, 2010, 2014, 2018],\n  };\n\n  componentDidMount() {\n    Promise.all([\n      d3.csv(higherPovertyData), //\n    ]).then((files) => {\n      const formattedHigherPovertyData = files.map((file) => {\n        return formatHigherPovertyDataTwo(file, 2002);\n      });\n      this.setState({\n        higherPovertyDisplayData: this.transformData(\n          formattedHigherPovertyData[0]\n        ),\n        reserveData: files,\n      });\n    });\n\n    const elements = document.querySelectorAll('.BarGraph-sticky');\n    Stickyfill.add(elements);\n  }\n\n  transformData = (dataset) => {\n    const totals = dataset[0].map((data, i) => {\n      return dataset.reduce((memo, curr) => {\n        return memo + curr[i].y;\n      }, 0);\n    });\n    return dataset.map((data) => {\n      return data.map((datum, i) => {\n        return { x: datum.x, y: (datum.y / totals[i]) * 100 };\n      });\n    });\n  };\n\n  updateGraph = (year) => {\n    const { reserveData, higherPovertyDisplayData } = this.state;\n    const updatedHigherPovertyData = reserveData.map((data) => {\n      return formatHigherPovertyDataTwo(data, year);\n    });\n    const upUp = this.transformData(updatedHigherPovertyData[0]);\n    higherPovertyDisplayData.forEach((element, i) => {\n      element.push(upUp[i][0]);\n    });\n    this.setState({\n      higherPovertyDisplayData: higherPovertyDisplayData,\n    });\n  };\n\n  render() {\n    const { higherPovertyDisplayData, years } = this.state;\n    return (\n      <div className=\"BarGraphV2-sequence-container\">\n        <div className=\"BarGraphV2-container BarGraph-sticky\">\n          <VictoryChart\n            height={400}\n            width={400}\n            domainPadding={{ x: 25 }}\n            animate={{ duration: 500 }}\n          >\n            <VictoryStack\n              colorScale={['orange', 'red', 'blue', 'black', 'green']}\n            >\n              {higherPovertyDisplayData &&\n                higherPovertyDisplayData.map((data, i) => {\n                  //  console.log(data)\n                  return <VictoryBar data={data} key={i} />;\n                })}\n            </VictoryStack>\n            <VictoryAxis dependentAxis tickFormat={(tick) => `${tick}%`} />\n            <VictoryAxis tickFormat={[2002, 2006, 2010, 2014, 2018]} />\n          </VictoryChart>\n        </div>\n        {years.map((year) => {\n          return (\n            <>\n              <div className=\"BarGraphV2-waypoint-buffer\" />\n              <Waypoint onEnter={() => this.updateGraph(year)} />\n              <div className=\"BarGraphV2-waypoint-buffer\" />\n            </>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default BarGraphV2;\n","import { values } from 'core-js-pure/es/object';\n\nconst formatPovertyData = (array, color) => {\n  const obj = {};\n\n  // eslint-disable-next-line\n  array.map((d, i) => {\n    if (i === 0) {\n      const arrObj = Object.keys(d).map((year, i) => {\n        return (obj[i] = { x: new Date(year, 1, 1), fill: color });\n      });\n      values(d).map((value, i) => {\n        return (arrObj[i].y = parseFloat(value));\n      });\n      return i <= 7 ? arrObj.slice(0, 7) : null;\n    }\n    values(d).map((value, i) => {\n      return (obj[i].size = parseFloat(value) / 25);\n    });\n  });\n\n  const arr = [obj];\n  delete arr[0][7];\n  return values(arr[0]);\n};\n\nexport default formatPovertyData;\n","const displayDataPopulator = (array, index) => {\n  return array.map((subArr, i) => {\n    return subArr.slice(0, index);\n  });\n};\n\nexport default displayDataPopulator;\n","// External Imports\nimport React, { Component } from 'react';\nimport { VictoryChart, VictoryScatter } from 'victory';\nimport * as d3 from 'd3';\nimport Waypoint from 'react-waypoint';\nimport Stickyfill from 'stickyfilljs';\n\n// Internal Imports\nimport formatPovertyData from '../../../utilities/formatPovertyData';\nimport displayDataPopulator from '../../../utilities/displayDataPopulator';\nimport './BubbleGraph.css';\n\n// Data\nimport asean1_9 from '../../../data/BubbleGraphData/asean_1.9.csv';\nimport asean3_2 from '../../../data/BubbleGraphData/asean_3.2.csv';\nimport asean5_5 from '../../../data/BubbleGraphData/asean_5.5.csv';\n\nclass BubbleGraph extends Component {\n  state = {\n    displayData: [],\n    reserveData: [],\n    index: [0, 1, 2, 3, 4, 5, 6, 7],\n    colors: ['#191970', '#325DDF', '#87CEFA'],\n    asean1_9: null,\n    asean3_2: null,\n    asean5_5: null,\n  };\n\n  componentDidMount() {\n    const { colors } = this.state;\n    Promise.all([d3.csv(asean1_9), d3.csv(asean3_2), d3.csv(asean5_5)]).then(\n      (files) => {\n        const formattedPovertyData = files.map((file, i) => {\n          const tractColor = colors[i];\n          return formatPovertyData(file, tractColor);\n        });\n\n        this.setState({\n          reserveData: formattedPovertyData,\n          asean1_9: formattedPovertyData[0],\n          asean3_2: formattedPovertyData[1],\n          asean5_5: formattedPovertyData[2],\n        });\n      }\n    );\n\n    const elements = document.querySelectorAll('.BubbleGraph-sticky');\n    Stickyfill.add(elements);\n  }\n\n  updateGraph = (index) => {\n    const { reserveData } = this.state;\n    const displayArr = displayDataPopulator(reserveData, index);\n    const res = [];\n    for (let i = 0; i < displayArr[0].length; i++) {\n      res.push(displayArr[0][i]);\n      res.push(displayArr[1][i]);\n      res.push(displayArr[2][i]);\n    }\n    this.setState({\n      displayData: res,\n    });\n  };\n\n  render() {\n    const { index, displayData } = this.state;\n    const { flowText } = this.props;\n    return (\n      <div className=\"BubbleGraph-sequence-container\">\n        <div className=\"BubbleGraph-container BubbleGraph-sticky\">\n          <VictoryChart\n            scale={{ x: 'time' }}\n            domain={{\n              x: [new Date(2012, 1, 1), new Date(2018, 1, 1)],\n              y: [0, 100],\n            }}\n          >\n            <VictoryScatter\n              bubbleProperty=\"size\"\n              domainPadding={{ x: 25 }}\n              data={displayData}\n              style={{\n                data: {\n                  fill: (d) => d.fill,\n                },\n              }}\n              animate={{\n                onExit: {\n                  duration: 500,\n                  before: () => ({ opacity: 0.3, _y: 0 }),\n                },\n                onEnter: {\n                  duration: 500,\n                  before: () => ({ opacity: 0.3, _y: 0 }),\n                  after: (datum) => ({ opacity: 1, _y: datum._y }),\n                },\n              }}\n            />\n          </VictoryChart>\n        </div>\n        {index.map((i) => {\n          return (\n            <>\n              <div className=\"BubbleGraph-waypoint-buffer\" />\n              <Waypoint onEnter={() => this.updateGraph(i)} />\n              <div className=\"BubbleGraph-waypoint-buffer\">\n                <p className=\"bg-text\">{flowText[i]}</p>\n              </div>\n              {i === 7 ? <div className=\"BubbleGraph-waypoint-buffer\" /> : null}\n            </>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default BubbleGraph;\n","const getRandomInt = (max) => {\n  return Math.floor(Math.random() * max) + 3;\n};\n\nexport default getRandomInt;\n","const scaleByScreenSize = () => {\n  const windowWidth = window.innerWidth;\n  if (windowWidth <= 400) {\n    return 200;\n  } else if (windowWidth <= 550) {\n    return 250;\n  } else if (windowWidth <= 600) {\n    return 275;\n  } else if (windowWidth <= 650) {\n    return 300;\n  } else if (windowWidth <= 700) {\n    return 325;\n  } else if (windowWidth <= 750) {\n    return 345;\n  } else if (windowWidth <= 800) {\n    return 360;\n  } else if (windowWidth <= 900) {\n    return 385;\n  } else if (windowWidth <= 1440) {\n    return 420;\n  }\n};\n\nexport default scaleByScreenSize;\n","// External Imports\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport * as topojson from 'topojson';\nimport Waypoint from 'react-waypoint';\nimport Stickyfill from 'stickyfilljs';\n\n// Internal Imports\nimport getRandomInt from '../../../utilities/getRandomInt';\nimport scaleByScreenSize from '../../../utilities/scaleByScreenSize';\nimport './Choropleth.css';\n\n// Data\nimport eapCountryData from '../../../data/ChoroplethData/EAPMap_topojson.json';\n\nclass Choropleth extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      color: null,\n      eapCountryData: null,\n      index: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],\n      windowHeight: null,\n      windowWidth: null,\n      mapCenter: null,\n      featureCollection: null,\n    };\n    this.choroplethContainerRef = React.createRef();\n    this.choroplethRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const color = d3\n      .scaleQuantize()\n      .domain([0, 10])\n      .range(d3.schemeBlues[9]);\n\n    const choroplethContainerHeight = this.choroplethContainerRef.current\n      .clientHeight;\n    const choroplethContainerWidth = this.choroplethContainerRef.current\n      .clientWidth;\n\n    const featureCollection = topojson.feature(\n      eapCountryData,\n      eapCountryData.objects.eap_all_by_subnatid1_shapefile\n    );\n    const center = d3.geoPath().centroid(featureCollection);\n\n    this.setState(\n      {\n        color: color,\n        eapCountryData: eapCountryData,\n        containerHeight: choroplethContainerHeight,\n        containerWidth: choroplethContainerWidth,\n        mapCenter: center,\n        featureCollection: featureCollection,\n      },\n      () => {\n        this.renderMap();\n      }\n    );\n\n    const elements = document.querySelectorAll('.Choropleth-sticky');\n    Stickyfill.add(elements);\n\n    window.addEventListener('resize', this.onResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.onResize);\n  }\n\n  renderMap = () => {\n    scaleByScreenSize();\n\n    const {\n      color,\n      containerHeight,\n      containerWidth,\n      featureCollection,\n      mapCenter,\n    } = this.state;\n\n    const svg = d3\n      .select('.Choropleth-container')\n      .append('svg')\n      .attr('class', 'Choropleth-svg')\n      .attr('height', containerHeight)\n      .attr('width', containerWidth);\n\n    const scale = scaleByScreenSize();\n    const offset = [containerWidth / 3, containerHeight / 2.4];\n\n    const projection = d3\n      .geoMercator()\n      .scale(scale)\n      .center(mapCenter)\n      .translate(offset);\n\n    const path = d3.geoPath().projection(projection);\n\n    svg\n      .append('g')\n      .attr('class', 'country')\n      .selectAll('path')\n      .data(featureCollection.features)\n      .enter()\n      .append('path')\n      .attr('class', 'sub-nation')\n      .attr('fill', (d) => color(getRandomInt(11)))\n      .attr('d', path);\n  };\n\n  onResize = () => {\n    const { mapCenter } = this.state;\n\n    const containerHeight = this.choroplethContainerRef.current.clientHeight;\n    const containerWidth = this.choroplethContainerRef.current.clientWidth;\n\n    const newScale = scaleByScreenSize();\n    const newOffset = [containerWidth / 3, containerHeight / 2.4];\n\n    const newProjection = d3\n      .geoMercator()\n      .scale(newScale)\n      .center(mapCenter)\n      .translate(newOffset);\n\n    const newPath = d3.geoPath().projection(newProjection);\n\n    const svg = d3\n      .select('.Choropleth-svg')\n      .attr('height', containerHeight)\n      .attr('width', containerWidth);\n\n    svg.selectAll('path').attr('d', newPath);\n  };\n\n  updateMap = () => {\n    const { color } = this.state;\n    d3.selectAll('path.sub-nation').attr('fill', (d) =>\n      color(getRandomInt(11))\n    );\n  };\n\n  render() {\n    const { index } = this.state;\n    return (\n      <div className=\"Choropleth-sequence-container\">\n        <div\n          className=\"Choropleth-container Choropleth-sticky\"\n          ref={this.choroplethContainerRef}\n        />\n        {index.map(() => {\n          return (\n            <>\n              <div className=\"Choropleth-waypoint-buffer\" />\n              <Waypoint onEnter={() => this.updateMap()} />\n            </>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default Choropleth;\n","// External Imports\nimport React from 'react';\n\n// Internal Imports\nimport './Header.css';\n\nconst Header = () => {\n  return (\n    <div className=\"Header-container container-fluid\">\n      <div className=\"row full-height-div\">\n        <div className=\"left-image-container full-height-div col-sm\" />\n        <div className=\"middle-image-container full-height-div col-sm\" />\n        <div className=\"right-image-container full-height-div col-sm\" />\n      </div>\n      <div className=\"Header-title\">\n        <h1>Lorem Ipsum</h1>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import { values } from 'core-js-pure/es/object';\n\nconst formatClassData = (array) => {\n  return array.map((d, i) => {\n    const obj = {};\n    const arrObj = Object.keys(d).map((year, i) => {\n      return (obj[i] = { x: new Date(year, 1, 1) });\n    });\n    values(d).map((value, i) => {\n      return (arrObj[i].y = parseFloat(value));\n    });\n    return i <= 18 ? arrObj.slice(0, 18) : null;\n  });\n};\n\nexport default formatClassData;\n","// External Imports\nimport React from 'react';\nimport { VictoryAxis, VictoryChart, VictoryStack, VictoryArea } from 'victory';\n\n// Internal Imports\nimport './StackedAreaGraphV2.css';\n\nconst StackedAreaGraphV2 = (props) => {\n  const { color, data, isPercent } = props;\n  return (\n    <div>\n      <div className=\"StackedAreaGraphV2-container\">\n        <VictoryChart\n          scale={{ x: 'time' }}\n          animate={{ duration: 1500 }}\n          width={450}\n          height={400}\n        >\n          <VictoryStack colorScale={color}>\n            {data.map((data, i) => {\n              return <VictoryArea key={i} data={data} interpolation=\"basis\" />;\n            })}\n          </VictoryStack>\n          {isPercent && (\n            <VictoryAxis dependentAxis tickFormat={(tick) => `${tick}%`} />\n          )}\n          {isPercent && <VictoryAxis crossAxis />}\n        </VictoryChart>\n      </div>\n    </div>\n  );\n};\n\nexport default StackedAreaGraphV2;\n","// External Imports\nimport React, { Component } from 'react';\nimport { VictoryChart, VictoryStack, VictoryArea, VictoryTheme } from 'victory';\nimport * as d3 from 'd3';\nimport { Button } from 'reactstrap';\n\n// Internal Imports\nimport formatClassData from '../../../utilities/formatClassData';\nimport './StackedAreaGraph.css';\n\n// Data\nimport aseanClassData from '../../../data/StackedAreaGraphData/asean_economic_class.csv';\nimport indonesiaClassData from '../../../data/StackedAreaGraphData/indonesia_economic_class.csv';\nimport laoClassData from '../../../data/StackedAreaGraphData/lao_economic_class.csv';\nimport malaysiaClassData from '../../../data/StackedAreaGraphData/malaysia_economic_class.csv';\nimport myanmarClassData from '../../../data/StackedAreaGraphData/myanmar_economic_class.csv';\nimport philippinesClassData from '../../../data/StackedAreaGraphData/philippines_economic_class.csv';\nimport thailandClassData from '../../../data/StackedAreaGraphData/thailand_economic_class.csv';\nimport vietnamClassData from '../../../data/StackedAreaGraphData/vietnam_economic_class.csv';\n\nclass StackedAreaGraph extends Component {\n  state = {\n    data: [],\n    countries: [\n      'ASEAN',\n      'Indonesia',\n      'Lao PDR',\n      'Malaysia',\n      'Myanmar',\n      'Philippines',\n      'Thailand',\n      'Vietnam',\n    ],\n    activeCountry: 'ASEAN',\n    formattedClassData: [],\n  };\n\n  componentDidMount() {\n    Promise.all([\n      d3.csv(aseanClassData),\n      d3.csv(indonesiaClassData),\n      d3.csv(laoClassData),\n      d3.csv(malaysiaClassData),\n      d3.csv(myanmarClassData),\n      d3.csv(philippinesClassData),\n      d3.csv(thailandClassData),\n      d3.csv(vietnamClassData),\n    ]).then((files) => {\n      const formattedClassData = files.map((file) => {\n        return formatClassData(file);\n      });\n      this.setState({\n        data: formattedClassData[0],\n        formattedClassData,\n      });\n    });\n  }\n\n  handleClick = (e) => {\n    const countryIndex = e.target.value;\n    this.setState({\n      data: this.state.formattedClassData[countryIndex],\n      activeCountry: this.state.countries[countryIndex],\n    });\n  };\n\n  render() {\n    const { activeCountry, data, countries } = this.state;\n    return (\n      <div>\n        <div className=\"button-container text-center p-3\">\n          {countries.map((country, i) => {\n            return (\n              <Button\n                outline\n                color=\"primary\"\n                className={`mr-2 ${\n                  activeCountry === country ? 'active' : null\n                }`}\n                key={`country-button-${i}`}\n                value={i}\n                onClick={(e) => this.handleClick(e)}\n              >\n                {country}\n              </Button>\n            );\n          })}\n        </div>\n        <div className=\"stacked-area-container\">\n          <VictoryChart\n            scale={{ x: 'time' }}\n            theme={VictoryTheme.material}\n            animate={{ duration: 1000 }}\n          >\n            <VictoryStack colorScale=\"blue\">\n              {data.map((data, i) => {\n                return (\n                  <VictoryArea key={i} data={data} interpolation=\"basis\" />\n                );\n              })}\n            </VictoryStack>\n          </VictoryChart>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default StackedAreaGraph;\n","// External Imports\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport Stickyfill from 'stickyfilljs';\n\n// Internal Imports\nimport formatClassData from '../../../utilities/formatClassData';\nimport StackedAreaGraphV2 from '../StackedAreaGraphV2';\nimport './StackedAreaGraphContainer.css';\n\n// Data\nimport eapClassData from '../../../data/StackedAreaGraphData/eap_economic_class.csv';\nimport eapExChinaClassData from '../../../data/StackedAreaGraphData/eap_ex_china_economic_class.csv';\nimport eapPercentageClassData from '../../../data/StackedAreaGraphData/eap_economic_class_percentage.csv';\nimport eapExChinaPercentageClassData from '../../../data/StackedAreaGraphData/eap_ex_china_economic_class_percentage.csv';\n\nclass StackedAreaGraphContainer extends Component {\n  state = {\n    data: [],\n    displayText: '',\n    formattedClassData: [],\n    index: 0,\n    percentageData: [],\n    stackedAreaText: [\n      'EAP Economic Class with China',\n      'EAP Economic Class without China',\n    ],\n  };\n\n  componentDidMount() {\n    Promise.all([\n      d3.csv(eapClassData),\n      d3.csv(eapExChinaClassData),\n      d3.csv(eapPercentageClassData),\n      d3.csv(eapExChinaPercentageClassData),\n    ]).then((files) => {\n      const formattedClassData = files.map((file) => {\n        return formatClassData(file);\n      });\n      this.setState(\n        {\n          data: formattedClassData[0],\n          displayText: this.state.stackedAreaText[0],\n          percentageData: formattedClassData[2],\n          formattedClassData,\n        },\n        () => {\n          this.updateGraph();\n        }\n      );\n    });\n\n    const elements = document.querySelectorAll(\n      '.StackedAreaGraphContainer-sticky'\n    );\n    Stickyfill.add(elements);\n  }\n\n  updateGraph = () => {\n    setInterval(() => {\n      const { index, formattedClassData, stackedAreaText } = this.state;\n      this.setState({\n        data: formattedClassData[index],\n        displayText: stackedAreaText[index],\n        percentageData: formattedClassData[index + 2],\n        index: index === 1 ? 0 : 1,\n      });\n    }, 5000);\n  };\n\n  render() {\n    const { data, percentageData, displayText } = this.state;\n    return (\n      <div>\n        <div className=\"StackedAreaGraphContainer-sequence-container StackedAreaGraphContainer-sticky container-fluid\">\n          <div className=\"row\">\n            <div className=\"col text-center\">\n              <h1 className=\"StackedAreaGraphContainer-header-text\">\n                {displayText}\n              </h1>\n            </div>\n          </div>\n          <div className=\"StackedAreaGraphContainer-container row\">\n            <div className=\"col-sm\">\n              <StackedAreaGraphV2 data={data} color={'blue'} />\n            </div>\n            <div className=\"col-sm\">\n              <StackedAreaGraphV2\n                data={percentageData}\n                color={'warm'}\n                isPercent={true}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default StackedAreaGraphContainer;\n","import { values } from 'core-js-pure/es/object';\n\nconst extractText = (obj) => {\n  return values(obj);\n};\n\nexport default extractText;\n","// External Imports\nimport React, { Component } from 'react';\n\n// Internal Imports\nimport appText from '../../text/appText';\nimport BarGraph from '../Graphs/BarGraph';\nimport BarGraphV2 from '../Graphs/BarGraphV2';\nimport BubbleGraph from '../Graphs/BubbleGraph';\nimport Choropleth from '../Graphs/Choropleth';\nimport Header from '../Header';\nimport StackedAreaGraph from '../Graphs/StackedAreaGraph';\nimport StackedAreaGraphContainer from '../Graphs/StackedAreaGraphContainer';\nimport extractText from '../../utilities/extractText';\nimport './StoryboardContainer.css';\n\nclass StoryboardContainer extends Component {\n  state = {\n    firstText: [],\n    secondText: [],\n    thirdText: [],\n    fourthText: [],\n    fifthText: [],\n    sixthText: [],\n    seventhText: [],\n  };\n\n  componentDidMount() {\n    const textArray = extractText(appText);\n    this.setState({\n      firstText: textArray.slice(0, 4),\n      secondText: textArray.slice(4, 14),\n      thirdText: textArray.slice(14, 24),\n      fourthText: textArray.slice(24, 34),\n      fifthText: textArray.slice(34, 44),\n      sixthText: textArray.slice(44, 54),\n      seventhText: textArray.slice(54),\n    });\n  }\n\n  render() {\n    const {\n      firstText,\n      secondText,\n      thirdText,\n      fourthText,\n      fifthText,\n      sixthText,\n      seventhText,\n    } = this.state;\n    return (\n      <div>\n        <Header />\n        <div className=\"StoryboardContainer\">\n          <div>\n            {firstText.map((text, i) => {\n              return (\n                <p className=\"pt-3 sb-text\" key={`text-${i}`}>\n                  {text}\n                </p>\n              );\n            })}\n          </div>\n          <StackedAreaGraphContainer />\n          <div>\n            {secondText.map((text, i) => {\n              return (\n                <p className=\"pt-3 sb-text\" key={`text-${i}`}>\n                  {text}\n                </p>\n              );\n            })}\n          </div>\n          <BubbleGraph flowText={thirdText} />\n          <div>\n            {fourthText.map((text, i) => {\n              return (\n                <p className=\"pt-3 sb-text\" key={`text-${i}`}>\n                  {text}\n                </p>\n              );\n            })}\n          </div>\n          <BarGraph />\n          {/* <BarGraphV2 /> */}\n          <div>\n            {fifthText.map((text, i) => {\n              return (\n                <p className=\"pt-3 sb-text\" key={`text-${i}`}>\n                  {text}\n                </p>\n              );\n            })}\n          </div>\n          <div>\n            {sixthText.map((text, i) => {\n              return (\n                <p className=\"pt-3 sb-text\" key={`text-${i}`}>\n                  {text}\n                </p>\n              );\n            })}\n          </div>\n          <Choropleth />\n          <div>\n            {seventhText.map((text, i) => {\n              return (\n                <p className=\"pt-3 sb-text\" key={`text-${i}`}>\n                  {text}\n                </p>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default StoryboardContainer;\n","// External Imports\nimport React from 'react';\n\n// Internal Imports\nimport StoryboardContainer from './components/StoryboardContainer';\n\nconst App = () => <StoryboardContainer />;\n\nexport default App;\n","// External Imports\nimport React from 'react';\n\n// Internal Imports\nimport App from './App';\n\nconst AppContainer = () => <App />;\n\nexport default AppContainer;\n","// External Imports\nimport 'react-app-polyfill/ie9';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// Internal Imports\nimport AppContainer from './AppContainer';\n\nReactDOM.render(<AppContainer />, document.getElementById('root'));\n"],"sourceRoot":""}